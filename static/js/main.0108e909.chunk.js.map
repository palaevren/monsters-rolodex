{"version":3,"sources":["components/card/card.component.js","logo.svg","components/card-list/card-list.component.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placehodler","handleChange","type","placeholder","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","m","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAGaA,GCHE,I,4BDGK,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aEHbC,EAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KACX,SAAAN,GAAO,OACH,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCP9BM,G,OAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASC,YAAaH,EACjDI,SAAUH,MCkCHI,E,kDA/Bb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IALH,E,gEASQ,IAAD,OACnBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,+BAG/B,IAAD,SACwBE,KAAKR,MAA9BT,EADC,EACDA,SAAUU,EADT,EACSA,YACXQ,EAAmBlB,EAASmB,QAAO,SAAAC,GAAC,OAAIA,EAAEvB,KAAKwB,cAAcC,SAASZ,EAAYW,kBACxF,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAAAmB,GAAC,OAAG,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,WAChG,cAAC,EAAD,CAAUzB,SAAUkB,W,GAvBVQ,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0108e909.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport './card-list.style.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map(\r\n                    monster => (\r\n                        <Card key={monster.id} monster={monster}/>\r\n                    ) \r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placehodler, handleChange}) => (\r\n    <input className='search' type='search' placeholder={placehodler}\r\n        onChange={handleChange}/>\r\n)","import React, { Component } from 'react'; \nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount () {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  render () {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(m => m.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox placehodler='search monsters' handleChange={e=> this.setState({searchField: e.target.value})}/>\n        <CardList monsters={filteredMonsters}>\n          \n        </CardList>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}